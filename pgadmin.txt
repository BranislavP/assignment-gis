SELECT amenity, COUNT(*) as cunt FROM planet_osm_polygon
WHERE amenity is not null
GROUP BY amenity
ORDER BY cunt DESC

SELECT amenity, way_area FROM planet_osm_polygon
WHERE amenity = 'restaurant'

SELECT building, amenity from planet_osm_polygon
where building = 'hospital'

SELECT boundary as col, COUNT(*) as cunt FROM planet_osm_polygon
WHERE boundary is not null
GROUP BY col
ORDER BY cunt DESC

SELECT admin_level, count(*) as cunt from planet_osm_polygon
where boundary = 'administrative' --and admin_level = '10'
group by admin_level
order by admin_level desc

SELECT DISTINCT ON(name) name, way_area, way FROM planet_osm_polygon
WHERE boundary = 'administrative' AND admin_level = '9'
ORDER BY name ASC, way_area DESC


select name, way from planet_osm_polygon
where boundary = 'administrative'

SELECT DISTINCT(admin_level) from planet_osm_polygon



residential, tertiary, primary, unclassified, secondary, motorway, service



SELECT abc.amenity, abc.count FROM (SELECT amenity, count(*) FROM planet_osm_point
GROUP BY amenity
UNION
SELECT amenity, count(*) FROM planet_osm_polygon
GROUP BY amenity
UNION
SELECT amenity, count(*) FROM planet_osm_line
GROUP BY amenity) as abc
WHERE abc.amenity like 'drink%'

SELECT name, amenity, 'point' AS type, ST_AsGeoJSON(ST_Transform(way, 4326)::geometry) AS geom, ST_Distance_Sphere(ST_SetSRID(ST_MakePoint(17, 48),4326), ST_Transform(way, 4326)) AS distance, way, ST_AsGeoJSON(ST_Transform(ST_Centroid(way), 4326)::geometry) AS centroid
FROM planet_osm_point
WHERE amenity in ('parking', 'fuel', 'atm', 'pharmacy')
AND ST_DWithin(ST_SetSRID(ST_MakePoint(17, 48),4326)::geography, ST_Transform(way, 4326)::geography, 50000)
--ORDER BY amenity, distance
UNION
SELECT name, amenity, 'polygon' AS type, ST_AsGeoJSON(ST_Transform(way, 4326)::geometry) AS geom, ST_Distance_Sphere(ST_SetSRID(ST_MakePoint(17, 48),4326), ST_Transform(way, 4326)) AS distance, way, ST_AsGeoJSON(ST_Transform(ST_Centroid(way), 4326)::geometry) AS centroid
FROM planet_osm_polygon
WHERE amenity in  ('parking', 'fuel', 'atm', 'pharmacy')
AND ST_DWithin(ST_SetSRID(ST_MakePoint(17, 48),4326)::geography, ST_Transform(way, 4326)::geography, 50000)
ORDER BY amenity, distance

EXPLAIN WITH city AS (
	SELECT DISTINCT ON (name) name, way_area, way 
	FROM planet_osm_polygon
	WHERE boundary = 'administrative' 
	AND admin_level = '9'
	AND name = 'Pezinok'
	LIMIT 1
	)
SELECT name, amenity, 'point' AS type, ST_AsGeoJSON(ST_Transform(way, 4326)::geometry) as geom, ST_AsGeoJSON(ST_Transform(ST_Centroid(way), 4326)::geometry) AS centroid
FROM planet_osm_point
WHERE amenity in ('parking', 'fuel', 'atm', 'pharmacy')
AND ST_Contains(ST_Transform((SELECT way FROM city LIMIT 1), 4326)::geometry, ST_Transform(way, 4326)::geometry)
UNION
SELECT name, amenity, 'polygon' AS type, ST_AsGeoJSON(ST_Transform(way, 4326)::geometry) as geom, ST_AsGeoJSON(ST_Transform(ST_Centroid(way), 4326)::geometry) AS centroid
FROM planet_osm_polygon
WHERE amenity in ('parking', 'fuel', 'atm', 'pharmacy')
AND ST_Contains(ST_Transform((SELECT way FROM city LIMIT 1), 4326)::geometry, ST_Transform(way, 4326)::geometry)
ORDER BY amenity

CREATE INDEX gist_geom_polygon
	ON planet_osm_polygon
	USING GIST (geometry(st_transform(way, 4326)));

CREATE INDEX ON planet_osm_polygon USING GIST (way);
CREATE INDEX ON planet_osm_polygon (amenity)
